# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: onlibrary_development
  username: <%= ENV["DATABASE_USERNAME"] %> # это переменная для логина
  password: <%= ENV["DATABASE_PASSWORD"] %> # это переменная для пароля
  host: localhost
  port: 5432

test:
  <<: *default
  database: onlibrary_test
  username: <%= ENV["DATABASE_USERNAME"] %>
  password: <%= ENV["DATABASE_PASSWORD"] %>
  host: localhost
  port: 5432

production:
  primary: &primary_production
    <<: *default
    database: onlibrary_production
    username: onlibrary
    password: <%= ENV["ONLIBRARY_DATABASE_PASSWORD"] %> # переменная окружения с паролем для продакшн базы данных
    host: <%= ENV["DATABASE_HOST"] %> # переменная окружения для хоста (например, на Render это будет host базы данных)
    port: 5432 # Обычно порт остается стандартным, если не используется другой

  cache:
    <<: *primary_production
    database: onlibrary_production_cache
    migrations_paths: db/cache_migrate

  queue:
    <<: *primary_production
    database: onlibrary_production_queue
    migrations_paths: db/queue_migrate

  cable:
    <<: *primary_production
    database: onlibrary_production_cable
    migrations_paths: db/cable_migrate
